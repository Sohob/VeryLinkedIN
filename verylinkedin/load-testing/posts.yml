# Use this command to run the tests and generate a json file with the report
# generate a different json file for each report as they override each other
# artillery run --output report.json NAME_OF_SCRIPT.yaml
config:
  target: "http://localhost:8080/api/v1/posts/"
  phases:
    - duration: 60
      arrivalRate: 5
      name: Warm up
    - duration: 120
      arrivalRate: 5
      rampTo: 50
      name: Ramp up load
    - duration: 600
      arrivalRate: 50
      name: Sustained load

scenarios:
  - name: "create post"
    flow:
      - post:
          url: "/createPost"
          json:
            userId: "1"
            content: "hi hamada"
            label: "AI"

  - name: "edit post"
    flow:
      - put:
          url: "/editPost"
          json:
            curUserId: "1"
            postId: "629fe09e63dca132f287cf14"
            content: "test"

  - name: "ban User"
    flow:
      - put:
          url: "/banUser"
          json:
            curUserId: "1"
            postId: "629fe09e63dca132f287cf14"
            userId: "2"



  - name: "add comment"
    flow:
      - put:
          url: "/userId"
          json:
            curUserId: "5"
            postId: "629fe09e63dca132f287cf14"
            content: "hi hahaha"


  - name: "unlike post"
    flow:
      - put:
          url: "/unlikePost"
          json:
            postId: "629fe09e63dca132f287cf14"
            curUserId: "3"

  - name: "like post"
    flow:
      - put:
          url: "/likePost"
          json:
            postId: "629fe09e63dca132f287cf14"
            curUserId: "3"

  - name: "get post"
    flow:
      - get:
          url: "/629fe09e63dca132f287cf14?curUserId=1"

  - name: "get post"
    flow:
      - get:
          url: "/recommend?label=AI&curUserId=1"
