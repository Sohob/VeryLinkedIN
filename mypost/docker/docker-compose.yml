version: '3'

services:
  minio:
    image: minio/minio:latest
    container_name: minio
    networks:
      - dev-net
    # restart: always
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
      - CONSOLE_ACCESS_KEY=minio
      - CONSOLE_SECRET_KEY=minio123
    command: server --address ":9000" --console-address ":9001" /data
    volumes:
      - minio_volume:/data
  mongo:
    container_name: mongo
    image: mongo:4.0.1
    volumes:
      - mongo_data:/data/db
    ports:
      - 27017:27017
    networks:
      - mongo-net
      - dev-net

  rabbitmq:
    networks:
      - dev-net
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    # image: registry.gitlab.com/mgc-developers/admins/e-cluster:rabbitmq-configs
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   args:
    #     - RMQ_PASSWORD=guest
    environment:
      RABBITMQ_ERLANG_COOKIE: "whatever"
      RABBITMQ_DEFAULT_USER: "guest" #"rabbitmq"
      RABBITMQ_DEFAULT_PASS: "guest" #"rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"

  mypost:
    image: abzokhattab/posts-service:postat
    networks:
      - dev-net
    ports:
      - '8085:8090'
    #build: .
    #restart: always
    environment:
      RABBITMQ_SERVER: rabbitmq
      MONGO_SERVER: mongo
      SPRING_PROFILES_ACTIVE: docker
      MINIO_URL: minio
    #      - MINIO_SECRET_KEY=minio123
    #      - CONSOLE_ACCESS_KEY=minio
    #      - CONSOLE_SECRET_KEY=minio123
    # command: server --address ":9000" --console-address ":9001" /data
    depends_on:
      - mongo
      - minio
      - rabbitmq
    labels:
      kompose.service.type: LoadBalancer

  mongo-client:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo_results
      # - ME_CONFIG_OPTIONS_READONLY=false
    networks:
      - mongo-net
      - dev-net
networks:
  mongo-net:
  dev-net:
    driver: bridge
volumes:
  minio_volume:
  mongo_data:
