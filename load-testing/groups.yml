# Use this command to run the tests and generate a json file with the report
# generate a different json file for each report as they override each other
# artillery run --output report.json NAME_OF_SCRIPT.yaml
config:
  target: "http://localhost:8080/api/v1/groups/"
  phases:
    - duration: 60
      arrivalRate: 5
      name: Warm up
    - duration: 120
      arrivalRate: 5
      rampTo: 50
      name: Ramp up load
    - duration: 600
      arrivalRate: 50
      name: Sustained load

scenarios:
  - name: "Send a message"
    flow:
      - post:
          url: "/5/62913276fe0cf54fc20ca5db/send"
          json: "{message: reflection man}"
            
  - name: "Create a group"
    flow:
      - post:
          url: "/create"
          json: "{
            participans: [5,2,69],
            title: yo,
            description: yoyo,
            admin: 5
            }"
            
  - name: "View a group"
    flow:
      - post:
          url: "/5/62913276fe0cf54fc20ca5db/view"
          json: "{}"
            
  - name: "Edit a message"
    flow:
      - post:
          url: "/5/62913276fe0cf54fc20ca5db/editmsg"
          json: "{
            messageId: 0,
            editedMessage: 3aw
            }"
  
  - name: "Update a group"
    flow:
      - post:
          url: "/5/62913276fe0cf54fc20ca5db/updategroup"
          json:  "{
            participans: [5,2,69,50,420],
            title: oi,
            description: oioi,
            admin: 2
            }"
            
  - name: "Delete a message"
    flow:
      - post:
          url: "/5/62913276fe0cf54fc20ca5db/deletemsg"
          json: "{messageId: 0}"
            
  - name: "Delete a group"
    flow:
      - post:
          url: "/5/62913276fe0cf54fc20ca5db/deletegroup"
          json: "{}"